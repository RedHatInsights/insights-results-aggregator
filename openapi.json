{
  "openapi": "3.0.0",
  "info": {
    "title": "Insights Results Aggregator",
    "description": "Aggregation service for the results of running Insights rules.",
    "version": "1.0.0",
    "contact": {}
  },
  "paths": {
    "/openapi.json": {
      "get": {
        "summary": "Returns the OpenAPI specification JSON.",
        "description": "The OpenAPI specification of this REST API service that is represented in formatted and human-readable JSON is available under this endpoint.",
        "operationId": "getOpenApi",
        "responses": {
          "200": {
            "description": "A JSON containing the OpenAPI specification for this service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "openapi": {
                      "type": "string"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "paths": {
                      "type": "object",
                      "description": "Available paths and their descriptions."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/metrics": {
      "get": {
        "summary": "Read all metrics exposed by this service",
        "description": "Currently the following metrics are exposed to be consumed by Prometheus or any other tool compatible with it: 'consumed_messages' the total number of messages consumed from Kafka, 'consuming_errors' the total number of errors during consuming messages from Kafka, 'successful_messages_processing_time' the time to process successfully message, 'failed_messages_processing_time' the time to process message fail, 'last_checked_timestamp_lag_minutes' shows how slow we get messages from clusters, 'produced_messages' the total number of produced messages, 'written_reports' the total number of reports written to the storage, 'feedback_on_rules' the total number of left feedback, 'sql_queries_counter' the total number of SQL queries, 'sql_queries_durations' the SQL queries durations.  Additionally it is possible to consume all metrics provided by Go runtime. There metrics start with 'go_' and 'process_ 'prefixes.",
        "parameters": [],
        "operationId": "getMetrics",
        "responses": {
          "200": {
            "description": "Default response containing all metrics in semi-structured text format",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "summary": "Returns a list of available organization IDs.",
        "operationId": "getOrganizations",
        "description": "[DEBUG ONLY] List of organizations for which at least one Insights report is available via the API.",
        "responses": {
          "200": {
            "description": "A JSON array of organization IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organizations": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "debug"
        ],
        "parameters": []
      }
    },
    "/organizations/{orgId}/clusters": {
      "get": {
        "summary": "Returns a list of clusters associated with the specified organization ID.",
        "description": "Returns a list of clusters associated with the specified unique organization ID.",
        "operationId": "getClustersForOrganization",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "description": "ID of the requested organization.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of clusters that belong to the specified organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clusters": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36,
                        "format": "uuid"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "prod"
        ]
      }
    },
    "/organizations/{orgId}/clusters/{clusterId}/users/{userId}/report": {
      "get": {
        "summary": "Returns the latest report for the given organization and cluster which contains information about rules that were hit by the cluster.",
        "operationId": "getReportForCluster",
        "description": "The report is specified by the organization ID and the cluster ID. The latest report available for the given combination will be returned.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "description": "ID of the organization that owns the cluster.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Latest available report for the given organization and cluster combination. Returns rules and their descriptions that were hit by the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "report": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "description": "Number of rules that were hit by the cluster. -1 is returned when no rules are defined for the cluster.",
                              "example": "1"
                            },
                            "last_checked_at": {
                              "type": "string",
                              "format": "date",
                              "example": "2020-01-23T16:15:59.478901889Z"
                            }
                          }
                        },
                        "report": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "component": {
                                "type": "string",
                                "description": "The rule identifier for the hit rule.",
                                "example": "some.python.module"
                              },
                              "key": {
                                "type": "string",
                                "description": "The erroy key triggered for this rule in the cluster.",
                                "example": "SOME_ERROR_KEY"
                              },
                              "user_vote": {
                                "type": "integer",
                                "description": "User vote - value of user voting. -1 is dislike vote, 0 is no vote, 1 is like vote.",
                                "enum": [
                                  -1,
                                  0,
                                  1
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If this rule result disabled or not. This field can be used in the UI to show only specific set of rules results."
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "prod"
        ]
      }
    },
    "/organizations/{orgId}/clusters/{clusterList}/reports": {
      "get": {
        "summary": "Returns the latest reports for the given list of clusters.",
        "operationId": "getReportsForClusters",
        "description": "Reports that are going to be returned are specified by list of cluster IDs that is part of path.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization ID represented as positive integer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "clusterList",
            "in": "path",
            "description": "A comma separated list of cluster IDs. Each ID must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "description": "ID of cluster in UUID format.",
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request, usualy caused when some cluster belongs to different organization."
          },
          "200": {
            "description": "Latest available report for the given list of cluster IDs. Returns rules and their descriptions that were hit by the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clusters": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36,
                        "format": "uuid"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36,
                        "format": "uuid"
                      }
                    },
                    "reports": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cluster": {
                            "type": "string",
                             "minLength": 36,
                             "maxLength": 36,
                             "format": "uuid"
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "description": "Number of rules that were hit by the cluster. -1 is returned when no rules are defined for the cluster.",
                                "example": "1"
                              },
                              "last_checked_at": {
                                "type": "string",
                                "format": "date",
                                "example": "2020-01-23T16:15:59.478901889Z"
                              }
                            }
                          },
                          "report": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "component": {
                                  "type": "string",
                                  "description": "The rule identifier for the hit rule.",
                                  "example": "some.python.module"
                                },
                                "key": {
                                  "type": "string",
                                  "description": "The erroy key triggered for this rule in the cluster.",
                                  "example": "SOME_ERROR_KEY"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "prod"
        ]
      }
    },
    "/organizations/{orgId}/clusters/reports": {
      "post": {
        "summary": "Returns the latest reports for the given list of clusters.",
        "operationId": "getReportsForClustersPost",
        "description": "Reports that are going to be returned are specified by list of cluster IDs that is part of request body.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization ID represented as positive integer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
            "description": "List of cluster IDs. Each ID must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266.",
            "required": true,
            "content": {
              "text/plain": {
                "schema": {
                }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request, usualy caused when some cluster belongs to different organization."
          },
          "200": {
            "description": "Latest available report for the given list of cluster IDs. Returns rules and their descriptions that were hit by the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clusters": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36,
                        "format": "uuid"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36,
                        "format": "uuid"
                      }
                    },
                    "reports": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cluster": {
                            "type": "string",
                             "minLength": 36,
                             "maxLength": 36,
                             "format": "uuid"
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "description": "Number of rules that were hit by the cluster. -1 is returned when no rules are defined for the cluster.",
                                "example": "1"
                              },
                              "last_checked_at": {
                                "type": "string",
                                "format": "date",
                                "example": "2020-01-23T16:15:59.478901889Z"
                              }
                            }
                          },
                          "report": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "component": {
                                  "type": "string",
                                  "description": "The rule identifier for the hit rule.",
                                  "example": "some.python.module"
                                },
                                "key": {
                                  "type": "string",
                                  "description": "The erroy key triggered for this rule in the cluster.",
                                  "example": "SOME_ERROR_KEY"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{orgId}/clusters/{clusterId}/users/{userId}/rules/{ruleId}": {
      "get": {
        "summary": "Returns the latest rule report for the given organization, cluster, user and rule ids",
        "operationId": "getSingleRule",
        "description": "The rule report is specified by organization ID, cluster ID, user ID and rule ID. The latest rule report available for the given combination will be returned.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Latest available rule report for the given organization, cluster and rule id combination. Returns rule and it description that were hit by the cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "report": {
                      "type": "object",
                      "properties": {
                        "component": {
                          "type": "string",
                          "description": "The rule identifier for the hit rule.",
                          "example": "some.python.module"
                        },
                        "key": {
                          "type": "string",
                          "description": "The erroy key triggered for this rule in the cluster.",
                          "example": "SOME_ERROR_KEY"
                        },
                        "user_vote": {
                          "type": "integer",
                          "description": "User vote - value of user voting. -1 is dislike vote, 0 is no vote, 1 is like vote.",
                          "enum": [
                            -1,
                            0,
                            1
                          ]
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If this rule result disabled or not. This field can be used in the UI to show only specific set of rules results."
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/like": {
      "put": {
        "summary": "Puts like for the rule with cluster for user",
        "operationId": "addLikeToRule",
        "description": "Puts like for the rule(ruleId) with cluster(clusterId) for user",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of a rule. An example: `some.python.module`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/dislike": {
      "put": {
        "summary": "Puts dislike for the rule with cluster for user",
        "operationId": "addDislikeToRule",
        "description": "Puts dislike for the rule(ruleId) with cluster(clusterId) for user",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of a rule. An example: `some.python.module`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/reset_vote": {
      "put": {
        "summary": "Resets vote for the rule with cluster for current user",
        "operationId": "resetVoteForRule",
        "description": "Resets vote for the rule(ruleId) with cluster(clusterId) for current user(from auth token)",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of a rule. An example: `some.python.module`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/get_vote": {
      "get": {
        "summary": "Returns vote for the rule with cluster for user",
        "operationId": "getVoteForRule",
        "description": "[DEBUG ONLY] Returns vote for the rule(ruleId) with cluster(clusterId) for user",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of a rule. An example: `some.python.module`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "vote": {
                      "type": "integer",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "debug"
        ]
      }
    },
    "/organizations/{orgIds}": {
      "delete": {
        "summary": "Deletes organization data from database.",
        "operationId": "deleteOrganizations",
        "description": "[DEBUG ONLY] All database entries related to the specified organization IDs will be deleted.",
        "parameters": [
          {
            "name": "orgIds",
            "in": "path",
            "required": true,
            "description": "IDs of the organizations whose data are supposed to be deleted.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion was successful."
          }
        },
        "tags": [
          "debug"
        ]
      }
    },
    "/clusters/{clusterIds}": {
      "delete": {
        "summary": "Deletes cluster data from database.",
        "operationId": "deleteClusters",
        "description": "[DEBUG ONLY] All database entries related to the specified cluster IDs will be deleted.",
        "parameters": [
          {
            "name": "clusterIds",
            "in": "path",
            "required": true,
            "description": "IDs of the clusters whose data are supposed to be deleted.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion was successful."
          }
        },
        "tags": [
          "debug"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/disable": {
      "put": {
        "summary": "Disables a rule/health check recommendation for specified cluster",
        "operationId": "disableRule",
        "description": "Disables a rule (ruleId) for cluster (clusterId) for current organization/user",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of a rule. An example: `some.python.module`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/disable_feedback": {
      "post": {
        "summary": "Returns rule/health check's disable feedback",
        "operationId": "disableRuleFeedback",
        "description": "Returns rule/health check's disable feedback",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            },
            "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of the rule",
            "schema": {
              "type": "string"
            },
            "example": "some.python.module"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "disable_feedback": {
                      "type": "string",
                      "example": "test"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/users/{userId}/enable": {
      "put": {
        "summary": "Re-enables a rule/health check recommendation for specified cluster",
        "operationId": "enableRule",
        "description": "Enables a rule (ruleId) for cluster (clusterId) for current organization/user",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "description": "ID of the cluster which must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266`",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36,
              "format": "uuid"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "description": "ID of a rule. An example: `some.python.module`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Numeric ID of the user. An example: `42`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rule",
          "prod"
        ]
      }
    }
  },
  "security": [],
  "servers": [],
  "components": {
    "links": {},
    "callbacks": {},
    "schemas": {}
  }
}
