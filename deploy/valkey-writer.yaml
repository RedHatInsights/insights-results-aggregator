# Copyright 2025 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: Template
metadata:
  name: valkey-writer
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: valkey-writer
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: "This app doesn't have that much traffic"
  spec:
    inMemoryDb: true
    envName: ${ENV_NAME}
    testing:
      iqePlugin: ccx
    deployments:
      - name: db-writer
        replicas: ${{VALKEY_WRITER_REPLICAS}}
        webServices:
          public:
            enabled: false
          private:
            enabled: false
          metrics:
            enabled: true
        podSpec:
          env:
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ADDRESSES
              value: "${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__TIMEOUT
              value: "${KAFKA_TIMEOUT}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__TOPIC
              value: "${INCOMING_TOPIC}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__DEAD_LETTER_QUEUE_TOPIC
              value: ""
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__PAYLOAD_TRACKER_TOPIC
              value: "${PAYLOAD_TRACKER_TOPIC}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__SERVICE_NAME
              value: "${VALKEY_WRITER_SERVICE_NAME}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__GROUP
              value: "${VALKEY_GROUP_ID}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ENABLED
              value: "true"
            - name: INSIGHTS_RESULTS_AGGREGATOR__BROKER__ENABLE_ORG_WHITELIST
              value: "false"
            - name: INSIGHTS_RESULTS_AGGREGATOR__CONTENT__PATH
              value: "/rules-content"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__ADDRESS
              value: ":9000"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__API_PREFIX
              value: "${CW_API_PREFIX}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__API_SPEC_FILE
              value: "/openapi/openapi.json"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__DEBUG
              value: "${DEBUG}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__AUTH
              value: "${AUTH}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__SERVER__AUTH_TYPE
              value: "xrh"
            - name: INSIGHTS_RESULTS_AGGREGATOR__PROCESSING__ORG_WHITELIST_FILE
              value: "/data/org_whitelist.csv"
            - name: INSIGHTS_RESULTS_AGGREGATOR__METRICS__ENABLED
              value: "true"
            - name: INSIGHTS_RESULTS_AGGREGATOR__STORAGE_BACKEND__USE
              value: "ocp_recommendations"
            - name: INSIGHTS_RESULTS_AGGREGATOR__OCP_RECOMMENDATIONS_STORAGE__TYPE
              value: redis
            - name: INSIGHTS_RESULTS_AGGREGATOR__REDIS__DATABASE
              value: "${REDIS_DATABASE}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__REDIS__TIMEOUT_SECONDS
              value: "${REDIS_TIMEOUT_SECONDS}"
            - name: INSIGHTS_RESULTS_AGGREGATOR__LOGGING__LOG_LEVEL
              value: ${LOG_LEVEL}
            - name: INSIGHTS_RESULTS_AGGREGATOR__LOGGING__DEBUG
              value: ${DEBUG}
            - name: INSIGHTS_RESULTS_AGGREGATOR__LOGGING__LOGGING_TO_CLOUD_WATCH_ENABLED
              value: ${CLOUDWATCH_ENABLED}
            - name: INSIGHTS_RESULTS_AGGREGATOR__CLOUDWATCH__DEBUG
              value: ${CLOUDWATCH_DEBUG}
            - name: INSIGHTS_RESULTS_AGGREGATOR__CLOUDWATCH__AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_region
                  optional: true
            - name: INSIGHTS_RESULTS_AGGREGATOR__CLOUDWATCH__LOG_GROUP
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: log_group_name
                  optional: true
            - name: INSIGHTS_RESULTS_AGGREGATOR__CLOUDWATCH__AWS_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_access_key_id
                  optional: true
            - name: INSIGHTS_RESULTS_AGGREGATOR__CLOUDWATCH__AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_secret_access_key
                  optional: true
          image: ${IMAGE}:${IMAGE_TAG}
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: "${CW_API_PREFIX}metrics"
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: "${CW_API_PREFIX}metrics"
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          resources:
            limits:
              cpu: ${CACHE_WRITER_CPU_LIMIT}
              memory: ${CACHE_WRITER_MEMORY_LIMIT}
            requests:
              cpu: ${CACHE_WRITER_CPU_REQUEST}
              memory: ${CACHE_WRITER_MEMORY_REQUEST}
    kafkaTopics:
      - replicas: 3
        partitions: 1
        topicName: ${INCOMING_TOPIC}
      - replicas: 3
        partitions: 1
        topicName: ${PAYLOAD_TRACKER_TOPIC}
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9000"
      prometheus.io/scheme: http
      prometheus.io/scrape: "true"
    name: valkey-writer-prometheus-exporter
    labels:
      app: valkey-writer
      app.kubernetes.io/instance: cache-writer
      app.kubernetes.io/name: db-writer
  spec:
    ports:
      - name: valkey-writer-port-metrics
        port: 9000
        protocol: TCP
        targetPort: 9000
    selector:
      pod: valkey-writer-db-writer
parameters:
# cache-writer
- description: Env Name
  name: ENV_NAME
  required: true
- description: Image name
  name: IMAGE
  value: quay.io/redhat-services-prod/obsint-processing-tenant/aggregator/aggregator
- description: Image tag
  name: IMAGE_TAG
  required: true
- name: VALKEY_WRITER_REPLICAS
  description: The number of replicas to use for the valkey-writer deployment
  value: "1"
- name: KAFKA_BOOTSTRAP_HOST
  required: true
  value: mq-kafka
- name: KAFKA_BOOTSTRAP_PORT
  required: true
  value: "29092"
- name: KAFKA_TIMEOUT
  value: 300s
- name: INCOMING_TOPIC
  value: ccx.ocp.results
  required: true
- name: PAYLOAD_TRACKER_TOPIC
  value: platform.payload-status
  required: true
- name: VALKEY_WRITER_SERVICE_NAME
  value: valkey-writer
  required: true
- name: VALKEY_GROUP_ID
  value: valkey_writer_app
  required: true
- name: CW_API_PREFIX
  required: true
  value: /
- name: LOG_LEVEL
  value: "INFO"
- name: DEBUG
  value: "true"
- name: AUTH
  value: "false"
- name: REDIS_DATABASE
  value: "0"
  required: true
- name: REDIS_TIMEOUT_SECONDS
  value: "30"
  required: true
- name: CLOUDWATCH_DEBUG
  value: "false"
  required: true
- name: CLOUDWATCH_ENABLED
  value: "true"
  required: true
- name: CACHE_WRITER_CPU_LIMIT
  value: 200m
- name: CACHE_WRITER_MEMORY_LIMIT
  value: 400Mi
- name: CACHE_WRITER_CPU_REQUEST
  value: 100m
- name: CACHE_WRITER_MEMORY_REQUEST
  value: 200Mi

