# Copyright 2021, 2022, 2023 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: go
go:
- "1.18"

services:
  - postgresql

jobs:
  include:
    - name: "Build 1.18"
      stage: build
      script:
        - make
    - stage: style
      script:
        - make style
    - stage: unit tests
      script:
        - make test
        - ./check_coverage.sh
        - make coverage
      after_success:
        - env
        - bash <(curl -s https://codecov.io/bash)
    - stage: openapi-checks
      language: node_js
      node_js:
        - 17
        - node
      script:
        - npm install -g @openapitools/openapi-generator-cli
        - openapi-generator-cli validate -i openapi.json
    - stage: bdd tests
      services:
        - docker
      before_script:
        - make
        - wget -O docker-compose.yml https://raw.githubusercontent.com/RedHatInsights/insights-behavioral-spec/main/docker-compose.yml
        - POSTGRES_DB_NAME=test docker-compose --profile test-aggregator up -d
        - cid=$(docker ps | grep 'insights-behavioral-spec:latest' | cut -d ' ' -f 1)
        - docker cp insights-results-aggregator $cid:`docker exec $cid bash -c 'echo "$VIRTUAL_ENV_BIN"'`
        - docker cp openapi.json $cid:`docker exec $cid bash -c 'echo "$HOME"'`
        - docker exec -u root $cid /bin/bash -c 'chmod +x $VIRTUAL_ENV_BIN/insights-results-aggregator'
      script:
        - docker exec -it $cid /bin/bash -c 'env && make aggregator-tests'
    - stage: integration tests
      script:
        - make integration_tests

stages:
  - build
  - style
  - unit tests
  - openapi-checks
  - bdd tests
  - integration tests
